<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mmh&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/09a701bcc60a7d3dec73b55714f054e4</icon>
  <subtitle>And that has made all the difference</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mmh.ac.cn/"/>
  <updated>2018-01-10T11:10:12.244Z</updated>
  <id>http://mmh.ac.cn/</id>
  
  <author>
    <name>mmh</name>
    <email>815536154@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STL容器</title>
    <link href="http://mmh.ac.cn/2018/01/10/STL%E5%AE%B9%E5%99%A8/"/>
    <id>http://mmh.ac.cn/2018/01/10/STL容器/</id>
    <published>2018-01-10T06:30:00.000Z</published>
    <updated>2018-01-10T11:10:12.244Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning"><ol><li>常数巨大(without O2)</li><li>动态内存,unfriendly for cena</li></ol></div><a id="more"></a><p><br></p><h1 id="queue-stack-priority-queue"><a href="#queue-stack-priority-queue" class="headerlink" title="queue/stack/priority_queue"></a>queue/stack/priority_queue</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">queue</span>/<span class="built_in">stack</span>&gt;</span><br><span class="line">定义:<span class="built_in">queue</span>&lt;data&gt; x;</span><br><span class="line">小根堆:priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q;</span><br></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x.push(key) x.pop(key)</span><br><span class="line">x.front() x.top()</span><br><span class="line">x.size() x.empty()</span><br></pre></td></tr></table></figure><p><br></p><h1 id="pair"><a href="#pair" class="headerlink" title="pair"></a>pair</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;iostream&gt;</span><br><span class="line">定义:pair&lt;data,data&gt; x;</span><br></pre></td></tr></table></figure><h2 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.first .second<span class="comment">//访问</span></span><br><span class="line">make_pair(x,y)<span class="comment">//构造</span></span><br><span class="line">重载了&lt;，以first为第一关键字，second为第二关键字升序</span><br></pre></td></tr></table></figure><p><br></p><h1 id="set-multiset-hash-set-unordered-set"><a href="#set-multiset-hash-set-unordered-set" class="headerlink" title="set/multiset/hash_set/unordered_set"></a>set/multiset/hash_set/unordered_set</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">set</span>/<span class="built_in">unordered_set</span>&gt;<span class="comment">//unordered_set was defined in C++11</span></span><br><span class="line">定义:<span class="built_in">set</span>&lt;data&gt; x;</span><br><span class="line">迭代器:<span class="built_in">set</span>&lt;data&gt;::iterator it;</span><br></pre></td></tr></table></figure><h2 id="操作-2"><a href="#操作-2" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x.clear()</span><br><span class="line">x.insert(key)<span class="comment">//插入一个值key</span></span><br><span class="line">x.erase(key)<span class="comment">//删除键值为key的元素(multiset会全部删除)</span></span><br><span class="line">x.erase(it)<span class="comment">//删除迭代器为it的元素</span></span><br><span class="line">x.erase(l,r)<span class="comment">//删除地址[l,r)的元素,l,r为两个迭代器指针</span></span><br><span class="line">x.begin() x.end()</span><br><span class="line">x.size() x.empty()</span><br><span class="line">x.find(key)<span class="comment">//返回key的迭代器指针</span></span><br><span class="line">x.count(key)<span class="comment">//返回键值等于key的元素的个数(multiset中使用)</span></span><br><span class="line">x.lower_bound(key)</span><br><span class="line">x.upper_bound(key)</span><br></pre></td></tr></table></figure><p><br></p><h1 id="map-multimap-hash-map-unordered-map"><a href="#map-multimap-hash-map-unordered-map" class="headerlink" title="map/multimap/hash_map/unordered_map"></a>map/multimap/hash_map/unordered_map</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">map</span>/<span class="built_in">unordered_map</span>&gt;<span class="comment">//unordered_map was defined in C++11</span></span><br><span class="line">定义:<span class="built_in">map</span>&lt;data&gt; x;</span><br><span class="line">迭代器:<span class="built_in">map</span>&lt;data&gt;::iterator it;</span><br></pre></td></tr></table></figure><h2 id="操作-3"><a href="#操作-3" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x.clear()</span><br><span class="line">mp[x]=key<span class="comment">//插入元素</span></span><br><span class="line">it-&gt;first it-&gt;second<span class="comment">//迭代器访问</span></span><br><span class="line">x.erase(key)<span class="comment">//删除键值为key的元素(multimap会全部删除)</span></span><br><span class="line">x.erase(it)<span class="comment">//删除迭代器为it的元素</span></span><br><span class="line">x.erase(l,r)<span class="comment">//删除地址[l,r)的元素,l,r为两个迭代器指针</span></span><br><span class="line">x.swap(x2)<span class="comment">//交换x,x2</span></span><br><span class="line">x.begin() x.end()</span><br><span class="line">x.size() x.empty()</span><br><span class="line">x.find(key)<span class="comment">//返回key的迭代器指针</span></span><br><span class="line">x.count(key)<span class="comment">//返回键值等于key的元素的个数(multimap中使用)</span></span><br><span class="line">x.lower_bound(key)</span><br><span class="line">x.upper_bound(key)</span><br></pre></td></tr></table></figure><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>树套树（雾</p><p><br></p><h1 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">vector</span>&gt;</span><br><span class="line">定义:<span class="built_in">vector</span>&lt;data&gt; x;</span><br><span class="line">迭代器:<span class="built_in">vector</span>&lt;data&gt;::iterator it;</span><br></pre></td></tr></table></figure><h2 id="操作-4"><a href="#操作-4" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x.clear()</span><br><span class="line">x.push_back(key)</span><br><span class="line">x.insert(pos,key)<span class="comment">//在迭代器指针pos处插入一个值key</span></span><br><span class="line">x.erase(it)<span class="comment">//删除迭代器为it的元素,use it=v.erase(it) instead of it++</span></span><br><span class="line">x.erase(l,r)<span class="comment">//删除地址[l,r)的数，l,r为两个迭代器指针</span></span><br><span class="line">x.swap(x2)<span class="comment">//交换x,x2</span></span><br><span class="line">x.reverse(l,r) 翻转地址[l,r)的数，l,r为两个迭代器指针</span><br><span class="line">x.begin() x.end()</span><br><span class="line">x.size() x.empty()</span><br><span class="line">x.lower_bound(key)</span><br><span class="line">x.upper_bound(key)</span><br></pre></td></tr></table></figure><p><br></p><h1 id="string"><a href="#string" class="headerlink" title="string"></a>string</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">string</span>&gt;</span><br><span class="line">定义:<span class="built_in">string</span> x;</span><br><span class="line">迭代器:<span class="built_in">string</span>::iterator it;</span><br></pre></td></tr></table></figure><h2 id="操作-5"><a href="#操作-5" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x.insert(pos,p)<span class="comment">//在pos插入一个串p</span></span><br><span class="line">x.erase(pos,l)<span class="comment">//删除从pos开始l个位置</span></span><br><span class="line">x.replace(pos,l,s)<span class="comment">//将从pos开始l个位置替换成串s</span></span><br><span class="line">x.length() x.size()</span><br><span class="line">x.substr(pos,l)<span class="comment">//截取从pos开始，长为l的子串</span></span><br><span class="line">x.find(s2)<span class="comment">//在s中匹配s2，返回位置，不存在返回-1，类似strstr</span></span><br><span class="line">&lt;&lt; &gt;&gt;输入输出流</span><br><span class="line">+ 拼接 &lt; 字典序</span><br></pre></td></tr></table></figure><p><br></p><h1 id="rope"><a href="#rope" class="headerlink" title="rope"></a>rope</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;ext/rope&gt;<span class="comment">//can't be used in cena</span></span><br><span class="line">声明:<span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line">定义:crope x;</span><br></pre></td></tr></table></figure><h2 id="操作-6"><a href="#操作-6" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x.push_back(ch)<span class="comment">//在末尾添加字符ch</span></span><br><span class="line">x.insert(pos,s)<span class="comment">//在pos位置插入字符ch</span></span><br><span class="line">x.erase(pos,x)<span class="comment">//从pos位置开始删除x个字符</span></span><br><span class="line">x.replace(pos,ch)<span class="comment">//将位置为pos的字符换成ch</span></span><br><span class="line">x.substr(pos,x)<span class="comment">//截取从pos开始，长为l的子串</span></span><br><span class="line">x.length() x.size()</span><br><span class="line">&lt;&lt; &gt;&gt;输入输出流</span><br><span class="line">-&gt;at(x)/[x]<span class="comment">//访问</span></span><br><span class="line">+ 拼接 &lt; 字典序</span><br></pre></td></tr></table></figure><h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><h3 id="区间翻转"><a href="#区间翻转" class="headerlink" title="区间翻转"></a>区间翻转</h3><p>同时维护一正一反两个rope……反转即交换两个子串……Orz……</p><h3 id="区间循环位移"><a href="#区间循环位移" class="headerlink" title="区间循环位移"></a>区间循环位移</h3><p>拆成多个子串连起来就好了……</p><h3 id="可持久化"><a href="#可持久化" class="headerlink" title="可持久化"></a>可持久化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可持久化并查集</span></span><br><span class="line">fa[<span class="number">0</span>]=<span class="keyword">new</span> rope&lt;<span class="keyword">int</span>&gt;(a,a+n+<span class="number">1</span>);fa[i]=<span class="keyword">new</span> rope&lt;<span class="keyword">int</span>&gt;(*fa[i<span class="number">-1</span>]);</span><br><span class="line">它可以实现O(<span class="number">1</span>)的拷贝历史版本，由于rope的底层是平衡树，copy时copy根节点就行了</span><br><span class="line">用它就可以轻松实现可持久化数组</span><br></pre></td></tr></table></figure><p><br></p><h1 id="bitset"><a href="#bitset" class="headerlink" title="bitset"></a>bitset</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">头文件:&lt;<span class="built_in">bitset</span>&gt;</span><br><span class="line">定义:<span class="built_in">bitset</span>&lt;M&gt; x;<span class="comment">//M:长度</span></span><br></pre></td></tr></table></figure><h2 id="操作-7"><a href="#操作-7" class="headerlink" title="操作"></a>操作</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x.<span class="built_in">set</span>()<span class="comment">//按位清1</span></span><br><span class="line">x.reset()<span class="comment">//按位清0</span></span><br><span class="line">x.flip()<span class="comment">//逐位取反</span></span><br><span class="line">x.any()<span class="comment">//x中存在为1的二进制位返回1</span></span><br><span class="line">x.count()<span class="comment">//x中为1的二进制位数</span></span><br><span class="line">x.to_ullong()<span class="comment">//把x转为类型为unsigned long long的数</span></span><br><span class="line">支持位运算</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note warning&quot;&gt;&lt;ol&gt;
&lt;li&gt;常数巨大(without O2)&lt;/li&gt;
&lt;li&gt;动态内存,unfriendly for cena&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://mmh.ac.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据结构" scheme="http://mmh.ac.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="STL" scheme="http://mmh.ac.cn/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://mmh.ac.cn/2018/01/09/test/"/>
    <id>http://mmh.ac.cn/2018/01/09/test/</id>
    <published>2018-01-09T07:35:46.274Z</published>
    <updated>2018-01-09T08:41:34.652Z</updated>
    
    <content type="html"><![CDATA[<p><i class="fa fa-download fa-2x"></i>  </p><p><i class="fa fa-qq"></i> qq</p><p><i class="fa fa-forward"></i> forward</p><p><i class="fa fa-stop"></i> stop</p><p><i class="fa fa-arrows-alt"></i> arrows-alt</p><p><i class="fa fa-arrows"></i> arrows</p><p><i class="fa fa-chevron-down"></i> chevron-down</p><p><i class="fa fa-chevron-left"></i> chevron-left</p><p><i class="fa fa-chevron-right"></i> chevron-right</p><p><i class="fa fa-chevron-up"></i> chevron-up</p><p><i class="fa fa-long-arrow-left"></i> long-arrow-left</p><p><i class="fa fa-long-arrow-down"></i> long-arrow-down</p><p><i class="fa fa-long-arrow-right"></i> long-arrow-right</p><p><i class="fa fa-long-arrow-up"></i> long-arrow-up</p><p><i class="fa fa-exchange"></i> exchange</p><p><i class="fa fa-link"></i> link</p><p><i class="fa fa-align-left"></i> align-left</p><p><i class="fa fa-rotate-right"></i> rotate-right </p><p><i class="fa fa-th-large"></i> th-large</p><p><i class="fa fa-table"></i> table</p><p><i class="fa fa-check-square"></i> check-square</p><p><i class="fa fa-circle"></i> circle</p><p><i class="fa fa-circle-o"></i> circle-o</p><p><i class="fa fa-cog"></i> cog</p><p><i class="fa fa-spinner"></i> spinner</p><p><i class="fa fa-file-code-o"></i> file-code-o</p><p><i class="fa fa-plane"></i> plane</p><p><i class="fa fa-rocket"></i> rocket</p><p><i class="fa fa-fighter-jet"></i> fighter-jet</p><p><i class="fa fa-car"></i> car</p><p><i class="fa fa-thumbs-up"></i> thumbs-up</p><p><i class="fa fa-question-circle-o"></i> question-circle-o</p><p><i class="fa fa-warning"></i> warning</p><p><i class="fa fa-unsorted "></i> unsorted </p><p><i class="fa fa-toggle-on"></i> toggle-on</p><p><i class="fa fa-toggle-off"></i> toggle-off</p><p><i class="fa fa-star"></i> star</p><p><i class="fa fa-sort-amount-desc"></i> sort-amount-desc</p><p><i class="fa fa-smile-o"></i> smile-o</p><p><i class="fa fa-puzzle-piece"></i> puzzle-piece</p><p>others </p><p><i class="fa fa-quote-left"></i> quote-left</p><p><i class="fa fa-adjust"></i> adjust</p><p><i class="fa fa-ban"></i> ban</p><p><i class="fa fa-book"></i> book</p><p><i class="fa fa-key"></i> key</p><p><i class="fa fa-question"></i> question</p><p><i class="fa fa-minus"></i> minus</p><p><i class="fa fa-home"></i> home</p><p><i class="fa fa-globe"></i> globe</p><p><i class="fa fa-commenting"></i> commenting</p><p><i class="fa fa-code"></i> code</p><p><i class="fa fa-cloud"></i> cloud</p><p><i class="fa fa-cube"></i> cube</p><p>调用<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">Font Awesome</a> </p><p>可以控制大小！</p><blockquote class="blockquote-center"><p>人生乃是一面镜子，</p><p>从镜子里认识自己，</p><p>我要称之为头等大事，</p><p>也只是我们追求的目的！</p></blockquote><p>文本居中引用</p><p>note标签</p><div class="note danger"><p>default</p></div><p>default 黑</p><p>primary 紫</p><p>success 绿</p><p>info 蓝</p><p>danger 红</p><p>warning 橙</p><p>带底色的块</p><div class="note danger no-icon"><p>danger no-icon</p></div><p>去掉+</p><div class="note danger"><p>note danger, note danger, note danger<br>note danger, note danger, note danger<br>note danger, note danger, note danger</p></div><span class="label default">default</span><p>name@文字</p><p>加底色</p><p>tabs</p><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">选项卡 1</a></li><li class="tab active"><a href="#选项卡-2">选项卡 2</a></li><li class="tab"><a href="#选项卡-3">选项卡 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p><strong>这是选项卡 1</strong> 呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈……</p></div><div class="tab-pane active" id="选项卡-2"><p><strong>这是选项卡 2</strong></p></div><div class="tab-pane" id="选项卡-3"><p><strong>这是选项卡 3</strong> 哇，你找到我了！φ(≧ω≦*)♪～</p></div></div></div><p>然后上面源码中<code>, 2</code>表示一开始在第二个选项卡，非必须，若数值为<code>-1</code>则隐藏选项卡内容。更多用法请查看 </p><div class="tabs" id="sixth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#sixth-unique-name-1"><i class="fa fa-text-width" "=""></i>Solution 1</a></li><li class="tab"><a href="#sixth-unique-name-2"><i class="fa fa-amazon" "=""></i>Solution 2</a></li><li class="tab"><a href="#sixth-unique-name-3"><i class="fa fa-bold" "=""></i>Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="sixth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="sixth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="sixth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div><p>+icon</p><a class="btn" href="https://www.baidu.com" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>点击下载百度</a><p>按钮</p><p>use icon</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;i class=&quot;fa fa-download fa-2x&quot;&gt;&lt;/i&gt;  &lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;fa fa-qq&quot;&gt;&lt;/i&gt; qq&lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;fa fa-forward&quot;&gt;&lt;/i&gt; forward&lt;/p&gt;
&lt;p&gt;&lt;i class=&quot;f
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>多项式与生成函数</title>
    <link href="http://mmh.ac.cn/2018/01/05/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B8%8E%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/"/>
    <id>http://mmh.ac.cn/2018/01/05/多项式与生成函数/</id>
    <published>2018-01-05T01:22:00.000Z</published>
    <updated>2018-01-10T13:06:57.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h1><p><br></p><h2 id="表示"><a href="#表示" class="headerlink" title="表示"></a>表示</h2><div class="note info"><p><strong>系数表示法</strong>：$F(x)=\sum\limits_{i=0}^{n}a_ix^i$</p><p><strong>点值表示法</strong>：$(x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)$</p><p>对于多项式$A(x)$，称其最高项的次数为这个多项式的<strong>度</strong>，记作$degA$</p></div><a id="more"></a><p><br></p><h2 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h2><div class="note info"><p><strong>多项式加减</strong>：采用系数表示法，进行向量加减</p><p><strong>多项式乘法</strong>：采用点值表示法，将点的坐标相乘</p></div><p><br></p><h3 id="快速傅里叶变换-FFT"><a href="#快速傅里叶变换-FFT" class="headerlink" title="快速傅里叶变换(FFT)"></a>快速傅里叶变换(FFT)</h3><p>基础知识部分待填坑</p><div class="note info"><p><strong>DTF</strong>：系数表示法-&gt;点值表示法<br><strong>逆DFT</strong>：点值表示法-&gt;系数表示法<br>利用单位复数根的性质，可以在$O(n \log n)$的时间复杂度内完成</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt; C;<span class="comment">//复数库</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m=n&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(n=<span class="number">1</span>;n&lt;=m;n&lt;&lt;=<span class="number">1</span>) L++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) R[i]=(R[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(L<span class="number">-1</span>));<span class="comment">//求逆序表：末位为0，直接为其前一半逆序表的值右移一位，末位为1，在最高位添加1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(C *a,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="keyword">if</span>(R[i]&gt;i) swap(a[i],a[R[i]]);<span class="comment">//利用逆序表，快速求逆序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        C wn(cos(pi/i),f*sin(pi/i));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j+=i&lt;&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="function">C <span class="title">w</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>)</span></span>;<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;i;k++,w*=wn)&#123;</span><br><span class="line">                C x=a[j+k],y=w*a[j+k+i];</span><br><span class="line">                a[j+k]=x+y;a[j+k+i]=x-y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f==<span class="number">-1</span>) <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) a[i]/=n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a class="btn" href="http://www.gatevin.moe/acm/fft算法学习笔记/" target="_blank" rel="noopener"><i class="fa fa-book fa-lg fa-fw"></i>笔记</a><p><br></p><h3 id="快速数论变换-NTT"><a href="#快速数论变换-NTT" class="headerlink" title="快速数论变换(NTT)"></a>快速数论变换(NTT)</h3><div class="note danger"><p>FFT的缺点：常数大，炸精度，无法在模意义下求解</p></div><p><i class="fa fa-key"></i> 新的算法</p><div class="note success"><p>数论意义下</p><p>一般模数$P=a \cdot 2^m +1,a$是一个较小的数</p><p>用原根代替单位复数根</p></div><a class="btn" href="https://www.cnblogs.com/candy99/p/6641972.html算法学习笔记/" target="_blank" rel="noopener"><i class="fa fa-book fa-lg fa-fw"></i>笔记</a><p><br></p><h3 id="快速沃尔什变换-FWT"><a href="#快速沃尔什变换-FWT" class="headerlink" title="快速沃尔什变换(FWT)"></a>快速沃尔什变换(FWT)</h3><p>大坑待填</p><a class="btn" href="http://picks.logdown.com/posts/179290-fast-walsh-hadamard-transform算法学习笔记/" target="_blank" rel="noopener"><i class="fa fa-book fa-lg fa-fw"></i>笔记</a><p><br></p><h3 id="多项式求逆"><a href="#多项式求逆" class="headerlink" title="多项式求逆"></a>多项式求逆</h3><div class="note info"><p>对于多项式$A(x),B(x)$，存在唯一的$Q(x),R(x)$<br>满足$A(x)=Q(x)B(x)+R(x)$，其中$degR&lt;degB$<br>称$Q(x)$为$B(x)$除$A(x)$的<strong>商</strong>，$R(x)$为$B(x)$除$A(x)$的<strong>余数</strong><br>记作$A(x) \equiv R(x) \pmod {B(x)}$</p><p>对于多项式$A(x)$，若存在$B(x)$满足$degB≤degA$，<br>并且$A(x)B(x) \equiv 1 \pmod {x^n}$，那么称$B(x)$为$A(x)$在$mod$ $x^n$意义下的<strong>逆元</strong>，记作$A^{-1}(x)$</p></div><p>采用倍增思想，设$B(x)$为$\bmod x^{\lceil \frac{n}{2} \rceil}$意义下$A(x)$的逆元</p><p>经过推导，最后可以得到</p><script type="math/tex; mode=display">A^{-1}(x) \equiv 2B(x) - A(x)B^2(x) \pmod {x^n}</script><p>递归$FFT$就可以搞了,同时易知多项式有逆元的充分必要条件为常数项有逆元</p><p>$O(n \log n)$，常数约为$FFT$的$6$倍</p><a class="btn" href="http://blog.miskcoo.com/2015/05/polynomial-inverse" target="_blank" rel="noopener"><i class="fa fa-arrows-alt fa-lg fa-fw"></i>推导</a><p><br></p><h3 id="多项式除法"><a href="#多项式除法" class="headerlink" title="多项式除法"></a>多项式除法</h3><p>大坑待填</p><p><br></p><h3 id="多项式取模"><a href="#多项式取模" class="headerlink" title="多项式取模"></a>多项式取模</h3><p>大坑待填</p><p><br></p><h3 id="牛顿迭代法"><a href="#牛顿迭代法" class="headerlink" title="牛顿迭代法"></a>牛顿迭代法</h3><p>给出$G(x)$，求$F(x)$，满足</p><script type="math/tex; mode=display">G(f(x)) \equiv 0 \pmod {x^n}</script><p><br></p><h3 id="多项式开方"><a href="#多项式开方" class="headerlink" title="多项式开方"></a>多项式开方</h3><p>求$B^2(x) \equiv A(x) \pmod {x^n}$</p><p>类似多项式求逆，设$B_0(x)$为$\bmod x^{\lceil \frac{n}{2} \rceil}$意义下$A(x)$的平方根</p><p>整理后得到</p><script type="math/tex; mode=display">B(x)=\frac{B_0(x)+A(x)B_0^{-1}(x)}{2} \pmod {x^n}</script><p>$O(n \log n)$</p><p><br></p><h3 id="多项式In"><a href="#多项式In" class="headerlink" title="多项式In"></a>多项式In</h3><p>求导……</p><p><br></p><h3 id="多项式exp"><a href="#多项式exp" class="headerlink" title="多项式exp"></a>多项式exp</h3><p>取对数后使用牛顿迭代法</p><p><br></p><h3 id="多项式k次幂"><a href="#多项式k次幂" class="headerlink" title="多项式k次幂"></a>多项式k次幂</h3><p>……</p><p><br></p><h3 id="多项式复合"><a href="#多项式复合" class="headerlink" title="多项式复合"></a>多项式复合</h3><p>……</p><p><br></p><h3 id="多项式多点求值与插值"><a href="#多项式多点求值与插值" class="headerlink" title="多项式多点求值与插值"></a>多项式多点求值与插值</h3><p><strong>多点求值</strong>：给出多项式$A(x)$和$n$个点$x_0, x_1, \cdots, x_{n-1}$，要求求出$A(x_0)$, $A(x_1)$, $\cdots$, $A(x_{n-1})$</p><p><strong>插值</strong>：给出n+1个点$(x_0, y_0), (x_1, y_1), \cdots, (x_n, y_n)$，求出一个$n$次多项式，使得这些点都在这个多项式上</p><p>大力搞搞……</p><p><br></p><p><strong>参考资料</strong><br><div class="note primary"><p><a href="http://blog.miskcoo.com/" target="_blank" rel="noopener">Orz Miskcoo</a>；<a href="http://blog.miskcoo.com/" target="_blank" rel="noopener">Orz Miskcoo</a>；<a href="http://www.cnblogs.com/candy99/p/6744332.html" target="_blank" rel="noopener">Orz Candy?</a></p><p><a href="http://m.blog.csdn.net/semiwaker/article/details/73251486" target="_blank" rel="noopener">总结1</a>；<a href="http://blog.csdn.net/coldef/article/details/76020530" target="_blank" rel="noopener">总结2</a></p></div></p><p><br></p><h1 id="生成函数"><a href="#生成函数" class="headerlink" title="生成函数"></a>生成函数</h1><p><br></p><h2 id="普通型生成函数"><a href="#普通型生成函数" class="headerlink" title="普通型生成函数"></a>普通型生成函数</h2><div class="note info"><p>定义序列$a_n$的普通型生成函数 (Ordinary Generating Function, OGF)，为</p><script type="math/tex; mode=display">A(x)=\sum_\limits{i=0}^{}a_ix^i</script></div><h2 id="指数型生成函数"><a href="#指数型生成函数" class="headerlink" title="指数型生成函数"></a>指数型生成函数</h2><div class="note info"><p>定义序列$a_n$的指数型生成函数 (Exponential Generating Function, EGF) ，为</p><script type="math/tex; mode=display">A(x)=\sum_\limits{i=0}^{}a_i \frac{x^i}{i!}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;多项式&quot;&gt;&lt;a href=&quot;#多项式&quot; class=&quot;headerlink&quot; title=&quot;多项式&quot;&gt;&lt;/a&gt;多项式&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;表示&quot;&gt;&lt;a href=&quot;#表示&quot; class=&quot;headerlink&quot; title=&quot;表示&quot;&gt;&lt;/a&gt;表示&lt;/h2&gt;&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;&lt;strong&gt;系数表示法&lt;/strong&gt;：$F(x)=\sum\limits_{i=0}^{n}a_ix^i$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;点值表示法&lt;/strong&gt;：$(x_0,y_0),(x_1,y_1),\cdots,(x_n,y_n)$&lt;/p&gt;
&lt;p&gt;对于多项式$A(x)$，称其最高项的次数为这个多项式的&lt;strong&gt;度&lt;/strong&gt;，记作$degA$&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://mmh.ac.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数学" scheme="http://mmh.ac.cn/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="多项式" scheme="http://mmh.ac.cn/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
      <category term="生成函数" scheme="http://mmh.ac.cn/tags/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
</feed>
